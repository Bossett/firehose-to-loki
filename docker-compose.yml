version: '3.8'

services:
  firehose-to-loki:
    image: firehose-to-loki
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    # ports: # uncomment to access the prom metrics endpoint
    #   - '8080:8080'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - firehost-to-loki

  loki:
    image: grafana/loki:2.9.4
    # ports: # uncomment to enable external access to loki
    #   - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - firehost-to-loki
    volumes:
      - loki_data:/loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - firehost-to-loki
    volumes:
      - grafana_data:/var/lib/grafana

networks:
  firehost-to-loki:

volumes:
  grafana_data:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: /data/grafana_data # e.g. path to where you're storing data
    #   o: bind
  loki_data:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: /data/loki_data # e.g. path to where you're storing data
    #   o: bind